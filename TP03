#include <stdio.h>
#include <stdlib.h>

// تعريف هيكل العنصر في القائمة
typedef struct element {
    int val;
    struct element* suivant;
} element;

// ** 1. إنشاء قائمة فارغة **
element* creerListe() {
    return NULL; // إرجاع قائمة فارغة
}

// ** 2. تحميل القائمة من مصفوفة أعداد صحيحة **
element* chargerListe(int Tab[], int size, element* liste) {
    for (int i = 0; i < size; i++) {
        element* nouveau = (element*)malloc(sizeof(element));
        if (nouveau == NULL) {
            printf("خطأ في تخصيص الذاكرة.\n");
            exit(1);
        }
        nouveau->val = Tab[i];
        nouveau->suivant = liste;
        liste = nouveau;
    }
    return liste;
}

// ** 3. عرض عناصر القائمة **
void afficherListe(element* liste) {
    element* courant = liste;
    while (courant != NULL) {
        printf("%d -> ", courant->val);
        courant = courant->suivant;
    }
    printf("NULL\n");
}

// ** 4. حذف عنصر من نهاية القائمة **
element* supprimerEnFin(element* liste) {
    if (liste == NULL) return NULL; // القائمة فارغة
    if (liste->suivant == NULL) { // عنصر واحد فقط
        free(liste);
        return NULL;
    }

    element* courant = liste;
    while (courant->suivant->suivant != NULL) {
        courant = courant->suivant;
    }
    free(courant->suivant);
    courant->suivant = NULL;
    return liste;
}

// ** 5. إضافة عنصر في بداية القائمة **
element* ajouterEnDebut(element* liste, int valeur) {
    element* nouveau = (element*)malloc(sizeof(element));
    if (nouveau == NULL) {
        printf("خطأ في تخصيص الذاكرة.\n");
        exit(1);
    }
    nouveau->val = valeur;
    nouveau->suivant = liste;
    return nouveau;
}

// ** 6. إفراغ القائمة **
void viderListe(element* liste) {
    element* courant = liste;
    while (courant != NULL) {
        element* temp = courant;
        courant = courant->suivant;
        free(temp);
    }
    printf("القائمة فارغة الآن.\n");
}

int main() {
    int Tab[10] = {1, 3, 5, 7, 8, 10, 9, 11, 13, 20};

    // ** إنشاء قائمة فارغة **
    element* liste = creerListe();

    // ** تحميل القائمة من المصفوفة **
    liste = chargerListe(Tab, 10, liste);

    // ** عرض القائمة **
    printf("القائمة بعد التحميل:\n");
    afficherListe(liste);

    // ** حذف عنصر من نهاية القائمة **
    liste = supprimerEnFin(liste);
    printf("القائمة بعد حذف العنصر الأخير:\n");
    afficherListe(liste);

    // ** إضافة عنصر في بداية القائمة **
    liste = ajouterEnDebut(liste, 40);
    printf("القائمة بعد إضافة 40 في البداية:\n");
    afficherListe(liste);

    // ** إفراغ القائمة **
    viderListe(liste);

    return 0;
}
