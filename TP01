#include <stdio.h>

int main() {
    // تعريف المصفوفة
    char matrix[5][5] = {
        {'1', '2', '3', '4', '5'},
        {'7', 'a', 'c', '8', 'd'},
        {'c', '9', '4', 'z', '8'},
        {'5', '6', 'p', 'n', '3'},
        {'2', '9', 't', 'm', 'k'}
    };

    // ** 1. عرض المصفوفة بالكامل **
    printf("المصفوفة بالكامل:\n");
    for (int i = 0; i < 5; i++) {
        for (int j = 0; j < 5; j++) {
            printf("%c ", matrix[i][j]);
        }
        printf("\n");
    }

    // ** 2. عرض الصفوف ذات الفهرس الزوجي فقط **
    printf("\nالصفوف ذات الفهرس الزوجي:\n");
    for (int i = 0; i < 5; i += 2) { // الصفوف ذات الفهرس الزوجي
        for (int j = 0; j < 5; j++) {
            printf("%c ", matrix[i][j]);
        }
        printf("\n");
    }

    // ** 3. عرض العناصر ذات الفهرس الفردي لكل صف **
    printf("\nالعناصر ذات الفهرس الفردي لكل صف:\n");
    for (int i = 0; i < 5; i++) {
        for (int j = 1; j < 5; j += 2) { // الأعمدة ذات الفهرس الفردي
            printf("%c ", matrix[i][j]);
        }
        printf("\n");
    }

    // ** 4. عرض القطرين (الرئيسي والثانوي) **
    printf("\nالقطر الرئيسي:\n");
    for (int i = 0; i < 5; i++) {
        printf("%c ", matrix[i][i]);
    }
    printf("\n");

    printf("\nالقطر الثانوي:\n");
    for (int i = 0; i < 5; i++) {
        printf("%c ", matrix[i][4 - i]); // الفهرس العكسي
    }
    printf("\n");

    // ** 5. تبديل المثلث العلوي بالمثلث السفلي **
    int square[4][4] = {
        {1, 2, 3, 4},
        {5, 6, 7, 8},
        {9, 10, 11, 12},
        {13, 14, 15, 16}
    };

    printf("\nالمصفوفة قبل التبديل:\n");
    for (int i = 0; i < 4; i++) {
        for (int j = 0; j < 4; j++) {
            printf("%d ", square[i][j]);
        }
        printf("\n");
    }

    // تنفيذ التبديل
    for (int i = 0; i < 4; i++) {
        for (int j = i + 1; j < 4; j++) {
            int temp = square[i][j];
            square[i][j] = square[j][i];
            square[j][i] = temp;
        }
    }

    printf("\nالمصفوفة بعد التبديل:\n");
    for (int i = 0; i < 4; i++) {
        for (int j = 0; j < 4; j++) {
            printf("%d ", square[i][j]);
        }
        printf("\n");
    }

    return 0;
}
